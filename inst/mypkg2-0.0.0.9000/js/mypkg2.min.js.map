{"version":3,"sources":["0"],"names":["$","document","ready","config","find","JSON","parse","html","app","Framework7","root","name","version","theme","notification","title","closeTimeout","touch","tapHold","taphold","clicks","externalLinks","methods","toggleDarkTheme","this","toggleClass","serviceWorker","path","installToast","toast","create","position","text","window","on","e","preventDefault","deferredPrompt","open","utils","nextTick","close","promptEvent","prompt","userChoice","then","result","console","log","views","opened","dialog","alert","hasOwnProperty","colorCSS","colorThemeCSSProperties","color","prop","appendTo","filled","dark"],"mappings":"AAAAA,EAAGC,UAAWC,OAAM,WAEnB,IAAIC,EAASH,EAAEC,UAAUG,KAAK,0BAC9BD,EAASE,KAAKC,MAAMH,EAAOI,QAG3B,IAAIC,EAAM,IAAIC,WAAW,CAEtBC,KAAM,OAENC,KAAM,SACNC,QAAST,EAAOS,QAEhBC,MAAOV,EAAOU,MACdC,aAAc,CACZC,MAAO,SACPC,aAAc,KAEhBC,MAAO,CACLC,QAASf,EAAOgB,SAElBC,OAAQ,CACNC,cAAe,KAEjBC,QAAS,CACPC,gBAAiB,WACJC,KACMxB,EAAE,QACbyB,YAAY,gBAGtBC,cAAe,CACbC,KAAM,uBAKNC,EAAepB,EAAIqB,MAAMC,OAAO,CAClCC,SAAU,SACVC,KAAM,yFAIRhC,EAAEiC,QAAQC,GAAG,sBAAwBC,IAEjCA,EAAEC,iBAEJH,OAAOI,eAAiBF,EAExBP,EAAaU,SAMf9B,EAAI+B,MAAMC,UAAS,WACjBxC,EAAE,mBAAmBkC,GAAG,SAAS,WAE/BN,EAAaa,QACb,MAAMC,EAAcT,OAAOI,eACtBK,IAKLA,EAAYC,SAEZD,EAAYE,WAAWC,KAAMC,IAC3BC,QAAQC,IAAI,KAAM,aAAcF,GAGhCb,OAAOI,eAAiB,aAG3B,KAGY7B,EAAIyC,MAAMnB,OAAO,cAGbtB,EAAIM,aAAagB,OAAO,CACzCE,KAAM,sBACNE,GAAI,CACFgB,OAAQ,WACNH,QAAQC,IAAI,2BAGfV,OAeH,GAZA9B,EAAI+B,MAAMC,UAAS,WACEhC,EAAIM,aAAagB,OAAO,CACzCE,KAAM,oBACLM,SACF,KAGHtC,EAAE,aAAakC,GAAG,WAAW,WAC3B1B,EAAI2C,OAAOC,MAAM,sBAIfjD,EAAOkD,eAAe,SAAU,CAClC,IAAIC,EAAW9C,EAAI+B,MAAMgB,wBAAwBpD,EAAOqD,OACxDxD,EAAE,WACCyD,KAAK,OAAQ,YACblD,KAAK,sCACgB+C,EAAS,uDACLA,EAAS,6DACPA,EAAS,8DACVA,EAAS,sCAEnCI,SAAS,QAITvD,EAAOkD,eAAe,YAAWlD,EAAOwD,QAAS,GA+CtD3D,EAAE,WACCyD,KAAK,OAAQ,YACblD,KAAK,0hDACLmD,SAAS,QAGPvD,EAAOkD,eAAe,UAASlD,EAAOyD,MAAO,GAC9CzD,EAAOyD,MACTpD,EAAIc,QAAQC","file":"mypkg2.min.js","sourceRoot":"../../mypkg2-build","sourcesContent":["$( document ).ready(function() {\n // collect all data elements stored in body\n var config = $(document).find(\"script[data-for='app']\");\n config = JSON.parse(config.html());\n\n // create app instance\n var app = new Framework7({\n    // App root element\n    root: '#app',\n    // App Name\n    name: 'My App',\n    version: config.version,\n    // other options\n    theme: config.theme,\n    notification: {\n      title: 'My App',\n      closeTimeout: 3000,\n    },\n    touch: {\n      tapHold: config.taphold,\n    },\n    clicks: {\n      externalLinks: 'a',\n    },\n    methods: {\n      toggleDarkTheme: function () {\n        var self = this;\n        var $html = self.$('html');\n        $html.toggleClass('theme-dark');\n      }\n    },\n    serviceWorker: {\n      path: 'service-worker.js'\n    },\n  });\n\n  // Create custom install UI\n  var installToast = app.toast.create({\n    position: 'center',\n    text: '<button id=\"install-button\" class=\"toast-button button color-green\">Install</button>',\n  });\n\n  // Handle install event\n  $(window).on('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n    // Stash the event so it can be triggered later.\n    window.deferredPrompt = e;\n    // Show install trigger\n    installToast.open();\n  });\n\n  // Installation must be done by a user gesture!\n  // close toast whenever a choice is made ... Give time\n  // to the toast to be created before event registration.\n  app.utils.nextTick(function() {\n    $('#install-button').on('click', function() {\n      // close install toast\n      installToast.close();\n      const promptEvent = window.deferredPrompt;\n      if (!promptEvent) {\n        // The deferred prompt isn't available.\n        return;\n      }\n      // Show the install prompt.\n      promptEvent.prompt();\n      // Log the result\n      promptEvent.userChoice.then((result) => {\n        console.log('üëç', 'userChoice', result);\n        // Reset the deferred prompt variable, since\n        // prompt() can only be called once.\n        window.deferredPrompt = null;\n      });\n    });\n  }, 500);\n\n  // init main view\n  var mainView = app.views.create('.view-main');\n\n\n  var notification = app.notification.create({\n    text: 'Hello, how are you?',\n    on: {\n      opened: function () {\n        console.log('Notification opened');\n      }\n    }\n  }).open();\n\n  // equivalent to setTimeout ...\n  app.utils.nextTick(function() {\n    var otherMessage = app.notification.create({\n      text: 'You look great!'\n    }).open();\n  }, 2000);\n\n  // taphold test\n  $('#mybutton').on('taphold', function () {\n    app.dialog.alert('Tap hold fired!');\n  });\n\n  // Set color theme\n  if (config.hasOwnProperty('color')) {\n    var colorCSS = app.utils.colorThemeCSSProperties(config.color);\n    $('<style>')\n      .prop('type', 'text/css')\n      .html(`:root {\n        --f7-theme-color: ${colorCSS[\"--f7-theme-color\"]};\n        --f7-theme-color-rgb: ${colorCSS[\"--f7-theme-color-rgb\"]};\n        --f7-theme-color-shade: ${colorCSS[\"--f7-theme-color-shade\"]};\n        --f7-theme-color-tint: ${colorCSS[\"--f7-theme-color-tint\"]};\n      }`)\n      .appendTo(\"head\");\n  }\n\n  // Filled theme\n  if (!config.hasOwnProperty('filled')) config.filled = false;\n  var filledCSS = `\n    :root,\n    :root.theme-dark,\n    :root .theme-dark {\n      --f7-bars-bg-color: var(--f7-theme-color);\n      --f7-bars-bg-color-rgb: var(--f7-theme-color-rgb);\n      --f7-bars-translucent-opacity: 0.9;\n      --f7-bars-text-color: #fff;\n      --f7-bars-link-color: #fff;\n      --f7-navbar-subtitle-text-color: rgba(255,255,255,0.85);\n      --f7-bars-border-color: transparent;\n      --f7-tabbar-link-active-color: #fff;\n      --f7-tabbar-link-inactive-color: rgba(255,255,255,0.54);\n      --f7-sheet-border-color: transparent;\n      --f7-tabbar-link-active-border-color: #fff;\n    }\n    .appbar,\n    .navbar,\n    .toolbar,\n    .subnavbar,\n    .calendar-header,\n    .calendar-footer {\n      --f7-touch-ripple-color: var(--f7-touch-ripple-white);\n      --f7-link-highlight-color: var(--f7-link-highlight-white);\n      --f7-button-text-color: #fff;\n      --f7-button-pressed-bg-color: rgba(255,255,255,0.1);\n    }\n    .navbar-large-transparent,\n    .navbar-large.navbar-transparent {\n      --f7-navbar-large-title-text-color: #000;\n\n      --r: 0;\n      --g: 122;\n      --b: 255;\n      --progress: var(--f7-navbar-large-collapse-progress);\n      --f7-bars-link-color: rgb(\n        calc(var(--r) + (255 - var(--r)) * var(--progress)),\n        calc(var(--g) + (255 - var(--g)) * var(--progress)),\n        calc(var(--b) + (255 - var(--b)) * var(--progress))\n      );\n    }\n    .theme-dark .navbar-large-transparent,\n    .theme-dark .navbar-large.navbar-transparent {\n      --f7-navbar-large-title-text-color: #fff;\n  }`;\n\n  $('<style>')\n    .prop('type', 'text/css')\n    .html(`${filledCSS}`)\n    .appendTo(\"head\");\n\n  // dark mode\n  if (!config.hasOwnProperty('dark')) config.dark = false;\n  if (config.dark) {\n    app.methods.toggleDarkTheme();\n  }\n});"]}
